{"version":3,"sources":["config.js","components/MovieCard.js","components/MovieList.js","components/SearchBar.js","components/Dashboard.js","components/Back.js","components/SimilarMovieCard.js","components/SimilarMovies.js","components/Movie.js","tmdb_logo.svg","App.js","index.js"],"names":["API_URL","API_KEY","IMG_URL","ALT_IMG","MOVIE_URL","MovieCard","vote","title","vote_average","overview","poster_path","id","className","to","src","alt","MovieList","movies","useState","movieData","setMovieData","useEffect","fetch","then","res","json","data","results","map","movie","SearchBar","searchchange","searchsubmit","searchinput","onSubmit","value","type","placeholder","onChange","Dashboard","setMovies","searchInput","setSearchInput","getMovies","API","e","target","preventDefault","Back","SimilarMovieCard","release_date","slice","SimilarMovies","movieId","similarMovieData","setSimilarMovieData","Movie","useParams","imdbUrl","imdb_id","runtime","href","rel","homepage","App","exact","path","component","tmdb_logo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.931fb4d0.chunk.js","sourcesContent":["export const API_URL =\r\n  'https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc';\r\nexport const API_KEY = 'b41008e2526f895c94e3f59374123262';\r\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w1280';\r\nexport const SEARCH_URL = 'https://api.themoviedb.org/3/search/movie';\r\nexport const ALT_IMG =\r\n  'https://images.unsplash.com/photo-1485846234645-a62644f84728?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1040&q=80';\r\nexport const MOVIE_URL = 'https://api.themoviedb.org/3/movie/';\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IMG_URL, ALT_IMG } from '../config.js';\r\n\r\nconst MovieCard = ({ title, vote_average, overview, poster_path, id }) => {\r\n  const setVoteClass = vote => {\r\n    if (vote >= 8) {\r\n      return 'green';\r\n    } else if (vote >= 6) {\r\n      return 'orange';\r\n    } else {\r\n      return 'red';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"movie\">\r\n      <Link to={`movie/${id}`} className=\"link\">\r\n        <img\r\n          src={poster_path ? `${IMG_URL}${poster_path}` : `${ALT_IMG}`}\r\n          alt={title}\r\n        />\r\n        <div className=\"movie-info\">\r\n          <h3>{title}</h3>\r\n          <span className={`tag ${setVoteClass(vote_average)}`}>\r\n            {vote_average}\r\n          </span>\r\n        </div>\r\n        <div className=\"movie-over\">\r\n          <h2>Overview:</h2>\r\n          <p>{overview}</p>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import React, { useEffect, useState } from 'react';\r\n// import { Link } from 'react-router-dom';\r\nimport MovieCard from './MovieCard';\r\nimport { API_URL, API_KEY } from '../config';\r\n\r\nconst MovieList = ({ movies }) => {\r\n  const [movieData, setMovieData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(`${API_URL}&api_key=${API_KEY}`)\r\n      .then(res => res.json())\r\n      .then(data => setMovieData(data.results));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {movies ? (\r\n        <div className=\"movie-container\">\r\n          {movies.map(movie => (\r\n            <MovieCard key={movie.id} {...movie} />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div className=\"movie-container\">\r\n          {movieData.map(movie => (\r\n            <MovieCard key={movie.id} {...movie} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","import React from 'react';\r\n\r\nconst SearchBar = ({ searchchange, searchsubmit, searchinput }) => {\r\n  return (\r\n    <>\r\n      <header>\r\n        <form onSubmit={searchsubmit}>\r\n          <input\r\n            className=\"search\"\r\n            value={searchinput}\r\n            type=\"search\"\r\n            placeholder=\"Search...\"\r\n            onChange={searchchange}\r\n          />\r\n        </form>\r\n      </header>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport MovieList from './MovieList';\r\nimport SearchBar from './SearchBar';\r\nimport { API_KEY, API_URL, SEARCH_URL } from '../config';\r\n\r\nconst Dashboard = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [searchInput, setSearchInput] = useState('');\r\n\r\n  useEffect(() => {\r\n    getMovies(`${API_URL}&api_key=${API_KEY}`);\r\n  }, []);\r\n\r\n  const getMovies = API => {\r\n    fetch(API)\r\n      .then(res => res.json())\r\n      .then(data => setMovies(data.results));\r\n  };\r\n\r\n  const handleChange = e => {\r\n    setSearchInput(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    getMovies(`${SEARCH_URL}?api_key=${API_KEY}&query=${searchInput}`);\r\n    setSearchInput('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SearchBar\r\n        searchchange={handleChange}\r\n        searchsubmit={handleSubmit}\r\n        searchinput={searchInput}\r\n      />\r\n      <MovieList movies={movies} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Back() {\r\n  return (\r\n    <div className=\"back\">\r\n      <Link to={'/'} className=\"link\">\r\n        <button>\r\n          <i className=\"fas fa-arrow-circle-left\"></i>\r\n          Back\r\n        </button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Back;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IMG_URL, ALT_IMG } from '../config.js';\r\n\r\nconst SimilarMovieCard = ({ title, release_date, poster_path, id }) => {\r\n  return (\r\n    <div className=\"similar-movie\">\r\n      <Link to={`${id}`} className=\"link\">\r\n        <img\r\n          src={poster_path ? `${IMG_URL}${poster_path}` : `${ALT_IMG}`}\r\n          alt={title}\r\n        />\r\n        <div className=\"similar-movie-info\">\r\n          <h3>{title}</h3>\r\n          <h6>{release_date?.slice(0, 4)}</h6>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimilarMovieCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport SimilarMovieCard from './SimilarMovieCard';\r\nimport { MOVIE_URL, API_KEY } from '../config';\r\n\r\nconst SimilarMovies = ({ movieId }) => {\r\n  const [similarMovieData, setSimilarMovieData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(`${MOVIE_URL}${movieId}/similar?api_key=${API_KEY}`)\r\n      .then(res => res.json())\r\n      .then(data => setSimilarMovieData(data.results.slice(0, 8)));\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"similar-movie-title\">Similar Movies</h1>\r\n      {\r\n        <div className=\"similar-movies\">\r\n          {similarMovieData?.map(movie => (\r\n            <SimilarMovieCard key={movie.id} {...movie} />\r\n          ))}\r\n        </div>\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SimilarMovies;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Back from './Back';\r\nimport SimilarMovies from './SimilarMovies';\r\nimport { IMG_URL, ALT_IMG, MOVIE_URL, API_KEY } from '../config';\r\n\r\nconst Movie = () => {\r\n  const [movieData, setMovieData] = useState([]);\r\n\r\n  const { movieId } = useParams();\r\n\r\n  const imdbUrl = `https://imdb.com/title/${movieData.imdb_id}`;\r\n\r\n  useEffect(() => {\r\n    fetch(`${MOVIE_URL}${movieId}?api_key=${API_KEY}`)\r\n      .then(res => res.json())\r\n      .then(data => setMovieData(data));\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      <Back />\r\n      <div className=\"movie-details\">\r\n        <img\r\n          src={\r\n            movieData.poster_path\r\n              ? `${IMG_URL}${movieData.poster_path}`\r\n              : `${ALT_IMG}`\r\n          }\r\n          alt={movieData.title}\r\n        ></img>\r\n        <div className=\"movie-text\">\r\n          <h1 className=\"movie-text-title\">{movieData.title}</h1>\r\n          <p className=\"movie-text-release\">\r\n            {movieData.release_date?.slice(0, 4)}\r\n          </p>\r\n          <p className=\"movie-text-runtime\">\r\n            Runtime: {movieData.runtime} minutes\r\n          </p>\r\n          <p className=\"movie-text-rating\">\r\n            Average Rating: {movieData.vote_average}/10\r\n          </p>\r\n          <a\r\n            className=\"movie-text-imdb\"\r\n            href={imdbUrl}\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            IMDb\r\n          </a>\r\n          <div className=\"movie-text-description\">\r\n            <p>\r\n              <b>Description</b>\r\n            </p>\r\n            <p>{movieData.overview}</p>\r\n          </div>\r\n          <a href={movieData.homepage} target=\"_blank\" rel=\"noreferrer\">\r\n            More details...\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div className=\"similar-movies\">\r\n        <SimilarMovies movieId={movieId} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","export default __webpack_public_path__ + \"static/media/tmdb_logo.de1a664e.svg\";","import React from 'react';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport Dashboard from './components/Dashboard';\r\nimport Movie from './components/Movie';\r\nimport tmdb_logo from './tmdb_logo.svg';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <div className=\"movie-container\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Dashboard} />\r\n          <Route exact path=\"/movie/:movieId\" component={Movie} />\r\n        </Switch>\r\n      </div>\r\n      <footer>\r\n        This product uses the TMDb API but is not endorsed or certified by TMDb.\r\n        <img src={tmdb_logo} className=\"logo\" alt=\"tmdb logo\"></img>\r\n      </footer>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}